namespace _00.Demo;

public abstract class Animal
{  
    // public abstract void SayHello(); // абстрактен метод (без тяло)
    // public void Eat()            // метод с тяло
    // {
    //     Console.WriteLine("The animal is eating.");
    // }
    // //  Абстракция - Да вземем от даден обект само релевантните свойства и методи.
    // //  Два начина за постигане на абстракция: Interface и Abstract class.
    // //  Степенуване абстракцията:
    // //   1. Интерфейс - най-висока степен на абстракция.
    // //   2. Абстрактен клас - средна степен на абстракция.  
    // //   3. Конкретен клас - най-ниска степен на абстракция.
    //
    // //  Interface -                                          |  abstract class - Клас в който да вземе тези свойства и методи който са релевантни към проекта който разработваме.
    // //                                                       |
    // // 1. Интерфейс не може да се инстанцира.                |   1. abstract class не може да се инстанцира.                     
    // // 2. НЯМАТ: КОНКРЕТИКА                                  |   2. Може да има: КОНКРЕТИКА
    // // 3. ВСИЧКИ методи в интерфейс са абстрактни (без тяло) |     => abstract методи/свойства/индексатори/събития(без тяло) → наследникът задължително ги override-ва.
    // // 4. Не може да съдържа методи с тяло (до C# 8.0)       |     => конкретни (реализирани) методи/свойства/полета/конструктори.  
    // // 5. чрез интерфейс се дефинира поведение               |     => virtual членове, които може да се override-ват. 
    // //    (какво трябва да може да прави обекта)             |   4. Абстрактна класа може да има конструктор (вика се от наследника).                                  
    // //                                                       |   5. Наследяване: клас може да наследи само от 1 абстрактен клас, но може да имплементира много интерфейси.
    // //                                                       |   
    // public interface IAnimal { }
    // public abstract class Mammal { }
    // public class Person : Mammal, IAnimal { }
    //
    //
    //
    // // Abstraction:                                           // Encapsulation:
    // // какво публично да се вижда от обекта                   // какво вътрешно да се крие в обекта
    // // interface / abstract class                             // access modifiers / properties with private set(private,protected, public)
    //
















}