namespace _00.Demo
{
    internal class Program
    {
        static void Main(string[] args)
        {
            // 1.Наследяване - механизъм, чрез който един клас може да наследи свойства и методи от друг клас.
            // 2.Енкапсулация - скриване на детайлите на реализацията и предоставяне на публичен интерфейс.
            // 3.Абстракция - процес на извличане на съществените характеристики на обект, като се игнорират несъществени детайли.
            // 4.Полиморфизъм - способността на обектите да се представят по различен начин в зависимост от контекста.


            // Ключова дума "is" - проверява дали дадена променлива е от определен тип и да се защити от грешки по време на изпълнение.
            // пример: 
            // if(someMammal is Cat catMammal)
            // {
            //     catMammal.Meow();    
            // }
            // else if (someMammal is Dog dogMammal)
            // {
            //    dogMammal.SayBark();
            // }

            // as ключова дума - използва се за безопасно преобразуване на типове, като връща null, ако преобразуването не е възможно.
            // as not 
            // пример:
            // Cat catMammal = someMammal as Cat;
            // if(catMammal != null)
            // {
            //     catMammal.Meow();
            // }
            // else
            // {
            //    Console.WriteLine("Casted dog");
            // }


            // Compile-time - методите се свързват с техните реализации по време на компилация.
            // Run-time - методите се свързват с техните реализации по време на изпълнение.
            // Method Overloading - процесът, при който два или повече метода в един клас имат едно и също име, но различни параметри.
            // Method Overriding - процесът, при който подклас предоставя специфична реализация на метод, който вече е дефиниран в неговия базов клас.

        }
    }
}
